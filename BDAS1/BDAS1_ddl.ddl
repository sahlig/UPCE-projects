-- Generated by Oracle SQL Developer Data Modeler 21.2.0.183.1957
--   at:        2021-12-10 10:47:29 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE
DROP TABLE adoptovaninavraceni;
DROP TABLE dary;
DROP TABLE incidenty;
DROP TABLE licence;
DROP TABLE nalezeni;
DROP TABLE odchyceni;
DROP TABLE odlozeni;
DROP TABLE vychazky;
DROP TABLE umrti;
DROP TABLE procedury;
DROP TABLE veterinarnikliniky;
DROP TABLE rezervace;
DROP TABLE psi;
DROP TABLE osoby;
DROP TABLE plemena;


CREATE TABLE adoptovaninavraceni (
    datum    DATE NOT NULL,
    adop_nav INTEGER NOT NULL,
    id_pes   INTEGER NOT NULL,
    id_osoba INTEGER NOT NULL
);

COMMENT ON TABLE adoptovaninavraceni IS
    'Tabulka uchovává záznamy o adpoci a navrácení psù';

COMMENT ON COLUMN adoptovaninavraceni.datum IS
    'Datum adopce/navrácení';

COMMENT ON COLUMN adoptovaninavraceni.adop_nav IS
    'Udává zda byl pes adoptován nebo navrácen
0 - pes byl adoptovaný
1 - pes byl navrácený pùvodnímu majiteli';

COMMENT ON COLUMN adoptovaninavraceni.id_pes IS
    'ID adoptovaného/navrácenéhop psa';

COMMENT ON COLUMN adoptovaninavraceni.id_osoba IS
    'ID osoby, která adoptuje/je majitelem';

CREATE TABLE dary (
    id_dar   INTEGER NOT NULL,
    obnos    NUMBER,
    ostatni  VARCHAR2(64),
    datum    DATE NOT NULL,
    id_osoba INTEGER NOT NULL
);

COMMENT ON TABLE dary IS
    'Tabulka uchovává záznamy o darech, které byli darovány útulku od osob';

COMMENT ON COLUMN dary.id_dar IS
    'Primární klíè darù';

COMMENT ON COLUMN dary.obnos IS
    'Obnos, který byl útulku pøedán
Dar musí být penìžní nebo vìcný, tím pádem musí být vyplnìno alespoò ostatní nebo obnos, nelze mít dar bez nièeho';

COMMENT ON COLUMN dary.ostatni IS
    'Ostatní majetkové dary, které byli útulku pøedány
Dar musí být penìžní nebo vìcný, tím pádem musí být vyplnìno alespoò ostatní nebo obnos, nelze mít dar bez nièeho.';

COMMENT ON COLUMN dary.datum IS
    'Datum, kdybyl da útulku pøedán';

COMMENT ON COLUMN dary.id_osoba IS
    'ID osoby, která darovala';

ALTER TABLE dary ADD CONSTRAINT dary_pk PRIMARY KEY ( id_dar );

CREATE TABLE incidenty (
    id_incident INTEGER NOT NULL,
    datum       DATE NOT NULL,
    popis       VARCHAR2(64) NOT NULL,
    id_pes      INTEGER NOT NULL
);

COMMENT ON TABLE incidenty IS
    'Tabluka uchovává incidenty, které psi zpùsobili';

COMMENT ON COLUMN incidenty.id_incident IS
    'Primární klíè incidentu';

COMMENT ON COLUMN incidenty.datum IS
    'Datum, kdy se incident stal';

COMMENT ON COLUMN incidenty.popis IS
    'Popis incidentu';

COMMENT ON COLUMN incidenty.id_pes IS
    'ID psa, který incident zpùsobil';

ALTER TABLE incidenty ADD CONSTRAINT incidenty_pk PRIMARY KEY ( id_incident );

CREATE TABLE licence (
    id_licence INTEGER NOT NULL,
    datum_od   DATE NOT NULL,
    datum_do   DATE NOT NULL,
    id_klinika INTEGER NOT NULL
);

COMMENT ON TABLE licence IS
    'Tabulka uchovává záznamy o jednotlivých licencích, které musí veterinární klinika mít pro zacházení se psy';

COMMENT ON COLUMN licence.id_licence IS
    'Primární klíè licence';

COMMENT ON COLUMN licence.datum_od IS
    'Datum, od kdy je licence platná';

COMMENT ON COLUMN licence.datum_do IS
    'Datum, do kdy je licence platná';

COMMENT ON COLUMN licence.id_klinika IS
    'ID kliniky, které licence patøí';

ALTER TABLE licence ADD CONSTRAINT licence_pk PRIMARY KEY ( id_licence );

CREATE TABLE nalezeni (
    id_pes INTEGER NOT NULL,
    misto  VARCHAR2(32) NOT NULL,
    datum  DATE NOT NULL
);

COMMENT ON TABLE nalezeni IS
    'Tabulka uchovává psy, kteøí byli nalezení';

COMMENT ON COLUMN nalezeni.id_pes IS
    'ID psa v databázi';

COMMENT ON COLUMN nalezeni.misto IS
    'Místo, kde byl pes nalezen';

COMMENT ON COLUMN nalezeni.datum IS
    'Datum, kdy byl pes nalezen';

ALTER TABLE nalezeni ADD CONSTRAINT nalezeny_pk PRIMARY KEY ( id_pes );

CREATE TABLE odchyceni (
    id_pes INTEGER NOT NULL,
    misto  VARCHAR2(32) NOT NULL,
    datum  DATE NOT NULL
);

COMMENT ON TABLE odchyceni IS
    'Tabulka uchovává psy, kteøí byli odchyceni';

COMMENT ON COLUMN odchyceni.id_pes IS
    'ID psa z databáze';

COMMENT ON COLUMN odchyceni.misto IS
    'Místo, kde byl pes odchycen';

COMMENT ON COLUMN odchyceni.datum IS
    'Datum, kdy byl pes odchycen';

ALTER TABLE odchyceni ADD CONSTRAINT odchyceny_pk PRIMARY KEY ( id_pes );

CREATE TABLE odlozeni (
    id_pes   INTEGER NOT NULL,
    datum_od DATE NOT NULL,
    datum_do DATE NOT NULL,
    id_osoba INTEGER NOT NULL
);

COMMENT ON TABLE odlozeni IS
    'Tabulka uchovává záznamy o psech, kteøí byli odloženi na urèitou dobu majitelem';

COMMENT ON COLUMN odlozeni.id_pes IS
    'ID psa z databáze';

COMMENT ON COLUMN odlozeni.datum_od IS
    'Datum, kdy byl pes pøedán útulku';

COMMENT ON COLUMN odlozeni.datum_do IS
    'Datum, do kdy bude pes v útulku';

COMMENT ON COLUMN odlozeni.id_osoba IS
    'ID majitele';

ALTER TABLE odlozeni ADD CONSTRAINT odlozeny_pk PRIMARY KEY ( id_pes );

CREATE TABLE osoby (
    id_osoba        INTEGER NOT NULL,
    jmeno           VARCHAR2(32) NOT NULL,
    prijmeni        VARCHAR2(32) NOT NULL,
    adresa          VARCHAR2(64) NOT NULL,
    telefonni_cislo VARCHAR2(12) NOT NULL
);

COMMENT ON TABLE osoby IS
    'Tabulka uchovává osoby, které interagují s útulkem';

COMMENT ON COLUMN osoby.id_osoba IS
    'Primární klíè osoby';

COMMENT ON COLUMN osoby.jmeno IS
    'Jméno osoby';

COMMENT ON COLUMN osoby.prijmeni IS
    'Pøijmení osoby';

COMMENT ON COLUMN osoby.adresa IS
    'Adresa, kde osoba žije';

COMMENT ON COLUMN osoby.telefonni_cislo IS
    'Telefonní èíslo osoby';

ALTER TABLE osoby ADD CONSTRAINT osoby_pk PRIMARY KEY ( id_osoba );

CREATE TABLE plemena (
    id_plemeno INTEGER NOT NULL,
    nazev      VARCHAR2(32) NOT NULL,
    popis      VARCHAR2(64)
);

COMMENT ON TABLE plemena IS
    'Tabulka obsahuje plemena psù';

COMMENT ON COLUMN plemena.id_plemeno IS
    'Primární klíè plemen';

COMMENT ON COLUMN plemena.nazev IS
    'Název plemena';

COMMENT ON COLUMN plemena.popis IS
    'Dodateèné zápisky o plemenu';

ALTER TABLE plemena ADD CONSTRAINT plemena_pk PRIMARY KEY ( id_plemeno );

CREATE TABLE procedury (
    id_procedura INTEGER NOT NULL,
    popis        VARCHAR2(64) NOT NULL,
    datum        DATE NOT NULL,
    cena         NUMBER NOT NULL,
    id_klinika   INTEGER NOT NULL,
    id_pes       INTEGER NOT NULL
);

COMMENT ON TABLE procedury IS
    'Tabulka uchovává záznamy o procedurách, které psi pdstoupili';

COMMENT ON COLUMN procedury.id_procedura IS
    'Primární klíè procedury';

COMMENT ON COLUMN procedury.popis IS
    'Popis procedury';

COMMENT ON COLUMN procedury.datum IS
    'Datum, kdy byla procedura provedena';

COMMENT ON COLUMN procedury.cena IS
    'Cena provedené procedury';

COMMENT ON COLUMN procedury.id_klinika IS
    'ID kliniky, která proceduru provedla';

COMMENT ON COLUMN procedury.id_pes IS
    'ID psa, který podstoupil proceduru';

ALTER TABLE procedury ADD CONSTRAINT procedury_pk PRIMARY KEY ( id_procedura );

CREATE TABLE psi (
    id_pes     INTEGER NOT NULL,
    jmeno      VARCHAR2(12),
    detail     VARCHAR2(32),
    karantena  INTEGER NOT NULL,
    id_plemeno INTEGER NOT NULL,
    typ_psa    CHAR(1)
);

COMMENT ON TABLE psi IS
    'Tabulka uchovává všechny psy, kteøí jsou v útulku';

COMMENT ON COLUMN psi.id_pes IS
    'Primární klíè psa';

COMMENT ON COLUMN psi.jmeno IS
    'Jméno psa';

COMMENT ON COLUMN psi.detail IS
    'Detail o psovi';

COMMENT ON COLUMN psi.karantena IS
    'karantena mùže mít 2 hodnoty
0 - pes není v karanténì a mùže být venèen a rezervován
1 - pes je v karanténì a nemùže být venèen a rezervován';

COMMENT ON COLUMN psi.id_plemeno IS
    'ID plemena, ke kterému pes patøí';

COMMENT ON COLUMN psi.typ_psa IS
    'Tento atribut urèuje typ psa';

ALTER TABLE psi ADD CONSTRAINT pes_pk PRIMARY KEY ( id_pes );

CREATE TABLE rezervace (
    id_rezervace INTEGER NOT NULL,
    datum        DATE NOT NULL,
    id_pes       INTEGER NOT NULL,
    id_osoba     INTEGER NOT NULL
);

COMMENT ON COLUMN rezervace.id_rezervace IS
    'Primární klíè rezervace';

COMMENT ON COLUMN rezervace.datum IS
    'Datum na které je pes rezervován';

COMMENT ON COLUMN rezervace.id_pes IS
    'ID rezervovaného psa';

COMMENT ON COLUMN rezervace.id_osoba IS
    'ID osoby, která provedla rezervaci';

ALTER TABLE rezervace ADD CONSTRAINT rezervace_pk PRIMARY KEY ( id_rezervace );

CREATE TABLE umrti (
    id_umrti  INTEGER NOT NULL,
    datum     DATE NOT NULL,
    utra_prir INTEGER NOT NULL,
    id_pes    INTEGER NOT NULL
);

COMMENT ON TABLE umrti IS
    'Tabulka uchovává úmrtí psù';

COMMENT ON COLUMN umrti.id_umrti IS
    'Primární klíè úmrtí';

COMMENT ON COLUMN umrti.datum IS
    'Datum úmrtí';

COMMENT ON COLUMN umrti.utra_prir IS
    'Udává jak pes zemøel, pøirozenì nebo byl utracen útulkem
0 - pes byl utracen
1 - pes zemøel pøirozenì';

COMMENT ON COLUMN umrti.id_pes IS
    'ID psa, který zemøel';

CREATE UNIQUE INDEX umrti__idx ON
    umrti (
        id_pes
    ASC );

ALTER TABLE umrti ADD CONSTRAINT umrti_pk PRIMARY KEY ( id_umrti );

CREATE TABLE veterinarnikliniky (
    id_klinika INTEGER NOT NULL,
    adresa     VARCHAR2(64) NOT NULL,
    id_osoba   INTEGER NOT NULL
);

COMMENT ON TABLE veterinarnikliniky IS
    'Tabulka uchovává záznamy o veterinárních klinikách, které útulkek využívá nebo využíval';

COMMENT ON COLUMN veterinarnikliniky.id_klinika IS
    'Primární klíè veterinární kliniky';

COMMENT ON COLUMN veterinarnikliniky.adresa IS
    'Adresa veterinární kliniky';

COMMENT ON COLUMN veterinarnikliniky.id_osoba IS
    'ID osoby, která veterinární kliniku vede';

ALTER TABLE veterinarnikliniky ADD CONSTRAINT veterinarnikliniky_pk PRIMARY KEY ( id_klinika );

CREATE TABLE vychazky (
    id_vychazka INTEGER NOT NULL,
    datum       DATE NOT NULL,
    id_pes      INTEGER NOT NULL,
    id_osoba    INTEGER NOT NULL
);

COMMENT ON TABLE vychazky IS
    'Tabulka uchovává záznamy o venèení psù';

COMMENT ON COLUMN vychazky.id_vychazka IS
    'Primární klíè vycházky';

COMMENT ON COLUMN vychazky.datum IS
    'Datum, kdy byl pes na vycházce';

COMMENT ON COLUMN vychazky.id_pes IS
    'ID venèeného psa';

COMMENT ON COLUMN vychazky.id_osoba IS
    'ID osoby, která psa venèila';

ALTER TABLE vychazky ADD CONSTRAINT vychazky_pk PRIMARY KEY ( id_vychazka );

ALTER TABLE adoptovaninavraceni
    ADD CONSTRAINT adoptovanynavraceny_osoby_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE adoptovaninavraceni
    ADD CONSTRAINT adoptovanynavraceny_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE dary
    ADD CONSTRAINT dary_osoby_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE incidenty
    ADD CONSTRAINT incidenty_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE veterinarnikliniky
    ADD CONSTRAINT kliniky_osoby_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE licence
    ADD CONSTRAINT licence_kliniky_fk FOREIGN KEY ( id_klinika )
        REFERENCES veterinarnikliniky ( id_klinika );

ALTER TABLE nalezeni
    ADD CONSTRAINT nalezeny_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE odchyceni
    ADD CONSTRAINT odchyceny_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE odlozeni
    ADD CONSTRAINT odlozeny_osoba_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE odlozeni
    ADD CONSTRAINT odlozeny_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE psi
    ADD CONSTRAINT pes_plemena_fk FOREIGN KEY ( id_plemeno )
        REFERENCES plemena ( id_plemeno );

ALTER TABLE procedury
    ADD CONSTRAINT procedury_kliniky_fk FOREIGN KEY ( id_klinika )
        REFERENCES veterinarnikliniky ( id_klinika );

ALTER TABLE procedury
    ADD CONSTRAINT procedury_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE rezervace
    ADD CONSTRAINT rezervace_osoby_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE rezervace
    ADD CONSTRAINT rezervace_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE umrti
    ADD CONSTRAINT umrti_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

ALTER TABLE vychazky
    ADD CONSTRAINT vychazky_osoby_fk FOREIGN KEY ( id_osoba )
        REFERENCES osoby ( id_osoba );

ALTER TABLE vychazky
    ADD CONSTRAINT vychazky_pes_fk FOREIGN KEY ( id_pes )
        REFERENCES psi ( id_pes );

CREATE OR REPLACE TRIGGER arc_fkarc_1_nalezeni BEFORE
    INSERT OR UPDATE OF id_pes ON nalezeni
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.typ_psa
    INTO d
    FROM
        psi a
    WHERE
        a.id_pes = :new.id_pes;

    IF ( d IS NULL OR d <> 'N' ) THEN
        raise_application_error(-20223,
                               'FK Nalezeny_Pes_FK in Table Nalezeni violates Arc constraint on Table Psi - discriminator column typ_psa doesn''t have value ''N''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_odchyceni BEFORE
    INSERT OR UPDATE OF id_pes ON odchyceni
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.typ_psa
    INTO d
    FROM
        psi a
    WHERE
        a.id_pes = :new.id_pes;

    IF ( d IS NULL OR d <> 'H' ) THEN
        raise_application_error(-20223,
                               'FK Odchyceny_Pes_FK in Table Odchyceni violates Arc constraint on Table Psi - discriminator column typ_psa doesn''t have value ''H''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_odlozeni BEFORE
    INSERT OR UPDATE OF id_pes ON odlozeni
    FOR EACH ROW
DECLARE
    d CHAR(1);
BEGIN
    SELECT
        a.typ_psa
    INTO d
    FROM
        psi a
    WHERE
        a.id_pes = :new.id_pes;

    IF ( d IS NULL OR d <> 'O' ) THEN
        raise_application_error(-20223,
                               'FK Odlozeny_Pes_FK in Table Odlozeni violates Arc constraint on Table Psi - discriminator column typ_psa doesn''t have value ''O''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             1
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
